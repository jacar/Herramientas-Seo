---
import ToolLayout from '../../layouts/ToolLayout.astro';
import ErrorBoundary from '../../components/ErrorBoundary.astro';

---

<ToolLayout
  title="Generador de Hashtags Instagram | SEO Tools Gratuitas"
  description="Genera hashtags optimizados para Instagram y aumenta la visibilidad de tus publicaciones. Herramienta gratuita y fácil de usar."
  toolName="Generador de Hashtags para Instagram"
>
  <div class="space-y-6">
    <div class="max-w-xl">
      <label for="caption" class="block text-sm font-medium text-gray-700 mb-2">
        Texto de tu publicación
      </label>
      <textarea
        id="caption"
        rows="4"
        class="shadow-sm block w-full focus:ring-blue-500 focus:border-blue-500 sm:text-sm border border-gray-300 rounded-md"
        placeholder="Escribe el texto de tu publicación aquí..."
      ></textarea>
    </div>

    <div>
      <button
        type="button"
        class="inline-flex items-center px-4 py-2 border border-transparent text-sm font-medium rounded-md shadow-sm text-white bg-blue-600 hover:bg-blue-700 focus:outline-none focus:ring-2 focus:ring-offset-2 focus:ring-blue-500"
      >
        Generar Hashtags
      </button>
    </div>

    <div id="results" class="hidden">
      <h3 class="text-lg font-medium text-gray-900 mb-2">Hashtags sugeridos</h3>
      <div class="bg-gray-50 p-4 rounded-md">
        <p class="text-gray-600" id="hashtags-result"></p>
      </div>
    </div>
  </div>

  <script>
    const caption = document.querySelector('#caption') as HTMLTextAreaElement;
    const generateBtn = document.querySelector('button') as HTMLButtonElement;
    const results = document.querySelector('#results') as HTMLDivElement;
    const hashtagsResult = document.querySelector('#hashtags-result') as HTMLParagraphElement;

    generateBtn.addEventListener('click', () => {
      const text = caption.value.trim();
      if (!text) {
        alert('Por favor, escribe el texto de tu publicación');
        return;
      }

      // Extraer palabras clave
      const keywords = text
        .toLowerCase()
        .replace(/[^\w\s]/gi, '')
        .split(/\s+/)
        .filter(word => word.length > 3);

      // Generar hashtags
      const hashtags = [...new Set(keywords)].map(word => `#${word}`);
      
      // Mostrar resultados
      results.classList.remove('hidden');
      hashtagsResult.textContent = hashtags.join(' ');
    });
  </script>
</ToolLayout>