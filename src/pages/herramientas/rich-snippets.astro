---
import ToolLayout from '../../layouts/ToolLayout.astro';
import ErrorBoundary from '../../components/ErrorBoundary.astro';

---

<ToolLayout
  title="Generador Rich Snippets para Videos | SEO Tools Gratuitas"
  description="Crea snippets enriquecidos para tus vídeos y mejora su visibilidad en los resultados de búsqueda de Google."
  toolName="Generador Rich Snippets para Videos"
>
  <div class="space-y-6">
    <div>
      <label for="videoTitle" class="block text-sm font-medium text-gray-700 mb-2">
        Título del video
      </label>
      <input
        type="text"
        id="videoTitle"
        class="shadow-sm focus:ring-blue-500 focus:border-blue-500 block w-full sm:text-sm border-gray-300 rounded-md"
        placeholder="Título de tu video"
      />
    </div>

    <div>
      <label for="videoDescription" class="block text-sm font-medium text-gray-700 mb-2">
        Descripción
      </label>
      <textarea
        id="videoDescription"
        rows="3"
        class="shadow-sm focus:ring-blue-500 focus:border-blue-500 block w-full sm:text-sm border-gray-300 rounded-md"
        placeholder="Descripción del video"
      ></textarea>
    </div>

    <div>
      <label for="videoUrl" class="block text-sm font-medium text-gray-700 mb-2">
        URL del video
      </label>
      <input
        type="url"
        id="videoUrl"
        class="shadow-sm focus:ring-blue-500 focus:border-blue-500 block w-full sm:text-sm border-gray-300 rounded-md"
        placeholder="https://ejemplo.com/video"
      />
    </div>

    <div>
      <label for="thumbnailUrl" class="block text-sm font-medium text-gray-700 mb-2">
        URL de la miniatura
      </label>
      <input
        type="url"
        id="thumbnailUrl"
        class="shadow-sm focus:ring-blue-500 focus:border-blue-500 block w-full sm:text-sm border-gray-300 rounded-md"
        placeholder="https://ejemplo.com/thumbnail.jpg"
      />
    </div>

    <div>
      <button
        type="button"
        id="generateBtn"
        class="inline-flex items-center px-4 py-2 border border-transparent text-sm font-medium rounded-md shadow-sm text-white bg-blue-600 hover:bg-blue-700 focus:outline-none focus:ring-2 focus:ring-offset-2 focus:ring-blue-500"
      >
        Generar Rich Snippet
      </button>
    </div>

    <div id="results" class="hidden">
      <h3 class="text-lg font-medium text-gray-900 mb-2">Código JSON-LD generado</h3>
      <div class="bg-gray-50 p-4 rounded-md">
        <pre class="text-sm text-gray-800 whitespace-pre-wrap" id="jsonOutput"></pre>
      </div>
      <button
        type="button"
        id="copyBtn"
        class="mt-4 inline-flex items-center px-4 py-2 border border-gray-300 text-sm font-medium rounded-md text-gray-700 bg-white hover:bg-gray-50 focus:outline-none focus:ring-2 focus:ring-offset-2 focus:ring-blue-500"
      >
        Copiar código
      </button>
    </div>
  </div>

  <script>
    const form = {
      title: document.querySelector('#videoTitle') as HTMLInputElement,
      description: document.querySelector('#videoDescription') as HTMLTextAreaElement,
      videoUrl: document.querySelector('#videoUrl') as HTMLInputElement,
      thumbnailUrl: document.querySelector('#thumbnailUrl') as HTMLInputElement
    };
    
    const generateBtn = document.querySelector('#generateBtn') as HTMLButtonElement;
    const results = document.querySelector('#results') as HTMLDivElement;
    const jsonOutput = document.querySelector('#jsonOutput') as HTMLPreElement;
    const copyBtn = document.querySelector('#copyBtn') as HTMLButtonElement;

    generateBtn.addEventListener('click', () => {
      const { title, description, videoUrl, thumbnailUrl } = form;
      
      if (!title.value || !description.value || !videoUrl.value || !thumbnailUrl.value) {
        alert('Por favor, completa todos los campos');
        return;
      }

      const jsonLd = {
        "@context": "https://schema.org",
        "@type": "VideoObject",
        "name": title.value,
        "description": description.value,
        "thumbnailUrl": thumbnailUrl.value,
        "uploadDate": new Date().toISOString(),
        "contentUrl": videoUrl.value
      };

      jsonOutput.textContent = JSON.stringify(jsonLd, null, 2);
      results.classList.remove('hidden');
    });

    copyBtn.addEventListener('click', () => {
      navigator.clipboard.writeText(jsonOutput.textContent || '');
      copyBtn.textContent = '¡Copiado!';
      setTimeout(() => {
        copyBtn.textContent = 'Copiar código';
      }, 2000);
    });
  </script>
</ToolLayout>